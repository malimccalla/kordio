type Company {
  id: String!
  slug: String
  name: String
  contactEmail: String
  address: String
  phoneNumber: String
  website: String
  note: String
  description: String

  categories: [Category!]
  savedByUsers: [User]
}

type Query {
  companies: [Company]
  company(where: CompanyWhereInput!): Company
}

type Mutation {
  createCompany(input: CreateCompanyInput!): CreateCompanyPayload!
}

input CompanyWhereInput {
  id: String
  slug: String
}

input CreateCompanyInput {
  name: String
  contactEmail: String
  location: String
  website: String
  description: String
  note: String
  address: String

  primaryCategoryId: String
  secondaryCategoryId: String
  tertiaryCategoryId: String
}

type CreateCompanyPayload {
  ok: Boolean!
  errors: [Error!]
  company: Company
}

type Error {
  path: String
  message: String
}
